{"version":3,"sources":["components/dataView.jsx","components/menu.jsx","components/refreshButton.jsx","components/app.jsx","index.jsx","icons/CO_Icon.svg","icons/Temp_Icon.svg","icons/Humid_Icon.svg"],"names":["DataView","props","containerRef","useRef","dotsContainerRef","xAxisRef","yAxisRef","useContainerDimensions","width","height","useState","dataArray","setDataArray","dataMinMax","setDataMinMax","minDate","setMinDate","maxDate","setMaxDate","error","setError","activeDotDatum","setActiveDotDatum","handleDotInfo","datum","element","valueWithUnit","toFixed","unit","activeDot","day","multiFormat","time","margin","left","right","top","bottom","useEffect","datArr","data","map","d","Date","dataProperty","d3","minMaxAvg","e","defaultYRange","min","Math","floor","max","ceil","undefined","length","w","h","count","scaling","minInterval","axisMinMax","newCount","yearInterval","monInterval","dayInterval","hourInterval","minuteTicks","hourTicks","dayTicks","monthTicks","yearTicks","labelText","Array","i","getFullYear","getMonth","getDate","getHours","getMinutes","variableTicks","calculateTickCount","xAxisMinMax","xScaling","xScale","domain","range","yScale","xAxis","tickFormat","tickPadding","tickSize","tickValues","yAxis","ticks","current","attr","call","yDOM","selectAll","remove","select","lastPoint","x","y","filterData","filter","diffX","diffY","nodes","hasAttribute","id","join","classed","on","target","dotEl","window","document","getElementById","parentNode","appendChild","updateD3","className","ref","transform","textAnchor","myRef","getDimensions","offsetWidth","offsetHeight","dimensions","setDimensions","handleResize","addEventListener","removeEventListener","counter","newMax","newMin","timeSpan","newMinMax","monthInterval","locale","dateTime","date","periods","days","shortDays","months","shortMonths","format","Menu","entries","active","entry","key","name","onClick","src","icon","alt","RefreshButton","state","setState","clicked","onAnimationEnd","App","CO_Icon","Temp_Icon","Humid_Icon","pages","activePage","setActivePage","setData","dateRange","setDateRange","timeRange","setTimeRange","avg","setMinMaxAvg","setActiveDot","expandDateSel","setExpandDateSel","fetchData","fromTime","toTime","headers","from","dateToString","to","axios","get","then","response","datapoints","year","month","shift","getTimezoneOffset","shiftSign","zeroPad","num","s","substr","handleActiveDot","dat","el","prevState","removeAttribute","handleMinMaxAvg","setInterval","selection","handleMenuSelection","toLocaleDateString","onChange","dates","value","returnValue","selectRange","times","disableClock","commonProps","colSpan","ReactDOM","render","StrictMode","module","exports"],"mappings":"4MAIe,SAASA,EAASC,GAC/B,IAAIC,EAAeC,mBACjBC,EAAmBD,mBACnBE,EAAWF,mBACXG,EAAWH,mBAJyB,EAKZI,EAAuBL,GAAzCM,EAL8B,EAK9BA,MAAOC,EALuB,EAKvBA,OALuB,EAOJC,mBAAS,IAPL,mBAO/BC,EAP+B,KAOpBC,EAPoB,OAQFF,mBAAS,CAAC,EAAG,IARX,mBAQ/BG,EAR+B,KAQnBC,EARmB,OASRJ,mBAAS,MATD,mBAS/BK,EAT+B,KAStBC,EATsB,OAURN,mBAAS,MAVD,mBAU/BO,EAV+B,KAUtBC,EAVsB,OAWZR,oBAAS,GAXG,mBAW/BS,EAX+B,KAWxBC,EAXwB,OAYMV,mBAAS,MAZf,mBAY/BW,EAZ+B,KAYfC,EAZe,KAqJtC,SAASC,EAAcC,EAAOC,GAC5BH,EAAkBE,GAClB,IAAIE,EAAiBF,EAAM,GAEvBA,EAAM,GAAGG,QAAQ,GAAK,IAAM1B,EAAM2B,KADlC,YAEJ3B,EAAM4B,UACJ,CACE,CACEC,IAAKC,EAAYP,EAAM,GAAI,OAC3BQ,KAAMD,EAAYP,EAAM,GAAI,WAE9BE,GAEFD,GAgEJ,OApNKxB,EAAMgC,SACThC,EAAMgC,OAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,KAGzDC,qBAAU,WAER,IAAMC,EAAStC,EAAMuC,KAAKC,KAAI,SAACC,GAAD,MAAO,CACnC,IAAIC,KAAKD,EAAEV,MACXU,EAAEzC,EAAM2C,kBAEVhC,EAAa2B,GACbvB,EAAW6B,IAAON,GAAQ,SAACG,GAAD,OAAOA,EAAE,OACnCxB,EAAW2B,IAAON,GAAQ,SAACG,GAAD,OAAOA,EAAE,OAGnC,IACEzC,EAAM6C,UACJD,IAAO5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,iBAAejB,QAAQ,GACvD,IACA1B,EAAM2B,KACRiB,IAAO5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,iBAAejB,QAAQ,GACvD,IACA1B,EAAM2B,KACRiB,IAAQ5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,iBAAejB,QAAQ,GACxD,IACA1B,EAAM2B,MAEV,MAAOmB,GACP9C,EAAM6C,UAAU,IAAK,IAAK,KAI5B,GAAI7C,EAAM+C,cAAe,CACvB,IAAIC,EACFJ,IAAO5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,iBAClC3C,EAAM+C,cAAc,GAChBE,KAAKC,MAAMN,IAAO5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,kBAC7C3C,EAAM+C,cAAc,GAEtBI,EACFP,IAAO5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,iBAClC3C,EAAM+C,cAAc,GAChBE,KAAKG,KAAKR,IAAO5C,EAAMuC,MAAM,SAACE,GAAD,OAAOA,EAAEzC,EAAM2C,kBAC5C3C,EAAM+C,cAAc,GAE1BlC,EAAc,CAACmC,EAAKG,OAErB,CAACnD,EAAMuC,KAAMhC,IAGhB8B,qBAAU,gBAEMgB,IAAZvC,QACYuC,IAAZrC,GACsB,IAAtBhB,EAAMuC,KAAKe,SAWf,WACE,IAAMC,EAAIhD,GAASP,EAAMgC,OAAOC,KAAOjC,EAAMgC,OAAOE,OAC9CsB,EAAIhD,GAAUR,EAAMgC,OAAOG,IAAMnC,EAAMgC,OAAOI,QAFlC,EAwFpB,SAAuBqB,GACrB,GAAIA,EAAQ,EAAG,MAAO,CAAC,GAAI,GAAI,IAE/B,IAAIC,EAKFC,EAEEC,EACAC,EAPFC,EAAe,EACfC,EAAc,EACdC,EAAc,EACdC,EAAe,EAMjBP,EAAU,SAbkB,MAcUQ,EAAYT,EAAO3C,EAASE,GAdtC,mBAgB5B,GAFC4C,EAd2B,KAcfD,EAde,KAcFE,EAdE,KAgBxBF,EAAc,GAAI,CACpBA,EAAc,EACdD,EAAU,OAFU,MAGmBS,EAAUV,EAAO3C,EAASE,GAH7C,mBAKpB,GAFC4C,EAHmB,KAGPK,EAHO,KAGOJ,EAHP,KAKhBjB,IAAWa,MAAMG,EAAW,GAAIA,EAAW,IAAM,EAAG,CACtDK,EAAe,EACfP,EAAU,MAF4C,MAGhBU,EAASX,EAAO3C,EAASE,GAHT,mBAKtD,GAFC4C,EAHqD,KAGzCI,EAHyC,KAG5BH,EAH4B,KAKlDG,EAAc,GAAI,CACpBA,EAAc,EACdN,EAAU,QAFU,MAGkBW,EACpCZ,EACA3C,EACAE,GANkB,mBAQpB,GALC4C,EAHmB,KAGPG,EAHO,KAGMF,EAHN,KAQhBjB,IAAYa,MAAMG,EAAW,GAAIA,EAAW,IAAM,EAAG,CAAC,IAAD,EAChBU,EACrCb,EACA3C,EACAE,GAJqD,mBACtD4C,EADsD,KAC1CE,EAD0C,KAC5BD,EAD4B,QAa/D,IADA,IAAMU,EAAY,IAAIC,MAAMX,EAAW,GAC9BY,EAAI,EAAGA,GAAKZ,EAAUY,IAC7BF,EAAUE,GAAK,IAAI/B,KACjBkB,EAAW,GAAGc,cAAgBD,EAAIX,EAClCF,EAAW,GAAGe,WAAaF,EAAIV,EAC/BH,EAAW,GAAGgB,UAAYH,EAAIT,EAC9BJ,EAAW,GAAGiB,WAAaJ,EAAIR,EAC/BL,EAAW,GAAGkB,aAAeL,EAAId,GAGrC,MAAO,CAACY,EAAWX,EAAYF,GA3IYqB,CAqL/C,SAA4BxE,GAC1B,OAAO0C,KAAKC,MAAM3C,EAAQ,IAvLVyE,CAAmBzB,IAJf,mBAKXgB,EALW,KAKAU,EALA,KAKaC,EALb,KAOZC,EAASvC,MAAewC,OAAOH,GAAaI,MAAM,CAAC,EAAG9B,IACtD+B,EAAS1C,MAAiBwC,OAAOxE,GAAYyE,MAAM,CAAC7B,EAAG,IAEvD+B,EAAQ3C,IACAuC,GACXK,YAAW,SAAC/C,GAAD,OAAOX,EAAYW,EAAGyC,MACjCO,YAAY,IACZC,UAAUlC,GACVmC,WAAWpB,GAERqB,EAAQhD,IAAY0C,GAAQO,MAAM,GAAGJ,YAAY,IAEvD7C,IAAUxC,EAAS0F,SAChBC,KAAK,YADR,oBACkC,EADlC,KACwCvC,EADxC,MAEGwC,KAAKT,GAER,IAAMU,EAAOrD,IAAUvC,EAASyF,SAASE,KAAKJ,GAE9CK,EAAKC,UAAU,QAAQC,SACvBF,EAAKG,OAAO,WAAWD,SAEvB,IAAIE,EAAY,CAAEC,EAAG,EAAGC,EAAG,GACvBC,EAAa9F,EAAU+F,QAAO,SAAChE,EAAGgC,GACpC,GAAU,IAANA,EAAS,OAAO,EACpB,IAAMiC,EAAQzD,KAAKG,KAAK+B,EAAO1C,EAAE,KAAO4D,EAAUC,EAC5CK,EAAQ1D,KAAKG,KAAKkC,EAAO7C,EAAE,KAAO4D,EAAUE,EAClD,OAAIG,EAAQ,IAAMC,EAAQ,MACxBN,EAAUC,EAAIrD,KAAKG,KAAK+B,EAAO1C,EAAE,KACjC4D,EAAUE,EAAItD,KAAKG,KAAKkC,EAAO7C,EAAE,MAC1B,MAoBX,GAfAG,IAAUzC,EAAiB2F,SACxBI,UAAU,UACVO,QAAO,SAAChE,EAAGgC,EAAGmC,GAAP,OACNA,EAAMnC,GAAGoC,aAAa,OAAwB,cAAhBD,EAAMnC,GAAGqC,MAGxCvE,KAAKiE,GACLO,KAAK,UACLhB,KAAK,MAAM,SAACtD,GAAD,OAAO0C,EAAO1C,EAAE,OAC3BsD,KAAK,MAAM,SAACtD,GAAD,OAAO6C,EAAO7C,EAAE,OAC3BsD,KAAK,IAAK,GACViB,QAAQ,OAAO,GACfC,GAAG,aAAa,SAACxE,GAAD,OAAOnB,EAAcmB,EAAGG,IAASsE,WACjDD,GAAG,SAAS,SAACxE,GAAD,OAAOnB,EAAcmB,EAAGG,IAASsE,WAE5C9F,EAAgB,CAClB,IAAM+F,EAAQC,OAAOC,SAASC,eAAe,aAC7C1E,IAAUuE,GACPpB,KAAK,KAAMZ,EAAO/D,EAAe,KACjC2E,KAAK,KAAMT,EAAOlE,EAAe,KAChC+F,GAASA,EAAMI,YAAYJ,EAAMI,WAAWC,YAAYL,IAtE5DM,GACAtG,GAAS,IAEiB,IAAtBnB,EAAMuC,KAAKe,QAAcnC,GAAS,KAEvC,CAACZ,EAAOC,EAAQE,EAAWQ,EAAOE,IAwJnC,yBAAKsG,UAAU,eAAeC,IAAK1H,IACtB,IAAViB,EACC,yBAAKV,OAAO,OAAOD,MAAM,QACvB,uBAAGqH,UAAS,oBAAe5H,EAAMgC,OAAOC,KAA5B,YAAoCjC,EAAMgC,OAAOG,IAAjD,MACV,0BAAMmE,EAAE,MAAMC,EAAE,MAAMsB,WAAW,SAASH,UAAU,UACjD1H,EAAM2B,MAET,uBAAGgG,IAAKvH,EAAUsH,UAAU,UAC5B,uBAAGC,IAAKtH,EAAUqH,UAAU,UAC5B,uBAAGC,IAAKxH,MAIZ,yBAAKuH,UAAU,aACb,uBAAGA,UAAU,UAAb,gDAQV,IAAMpH,EAAyB,SAACwH,GAC9B,IAAMC,EAAgB,iBAAO,CAC3BxH,MAAOuH,EAAMhC,QAAQkC,YACrBxH,OAAQsH,EAAMhC,QAAQmC,eAHgB,EAKJxH,mBAAS,CAAEF,MAAO,EAAGC,OAAQ,IALzB,mBAKjC0H,EALiC,KAKrBC,EALqB,KAYxC,OANA9F,qBAAU,WACR,IAAM+F,EAAe,kBAAMD,EAAcJ,MAGzC,OAFID,EAAMhC,SAASqC,EAAcJ,KACjCX,OAAOiB,iBAAiB,SAAUD,GAC3B,kBAAMhB,OAAOkB,oBAAoB,SAAUF,MACjD,CAACN,IACGI,GAaT,IAAMhE,EAAc,SAACT,EAAOT,EAAKG,GAG/B,IAFA,IAAIoF,EAAU,GAENpF,EAAI2B,aAAeyD,GAAW,IAAM,GAAGA,IAC/C,IAAMC,EAAS,IAAI9F,KACjBS,EAAIuB,cACJvB,EAAIwB,WACJxB,EAAIyB,UACJzB,EAAI0B,WACJ1B,EAAI2B,aAAeyD,GAGrB,IADAA,EAAU,GACFvF,EAAI8B,aAAeyD,GAAW,IAAM,GAAGA,IAC/C,IAAME,EAAS,IAAI/F,KACjBM,EAAI0B,cACJ1B,EAAI2B,WACJ3B,EAAI4B,UACJ5B,EAAI6B,WACJ7B,EAAI8B,aAAeyD,GAGfG,EAAW9F,IAAca,MAAMgF,EAAQD,GAE7C,IADAD,EAAU,EACO,EAAVA,EAAc9E,EAAQiF,GAAUH,IACvC,IAAM5E,EAAwB,EAAV4E,EAGpB,MAAO,CAAC,CAACE,EAAQD,GAAS7E,EAFTV,KAAKC,MAAMwF,EAAW/E,KAKnCQ,EAAY,SAACV,EAAOT,EAAKG,GAC7B,IAAMwF,EAAY,CAAC/F,IAAYM,MAAMF,GAAMJ,IAAYQ,KAAKD,IACtDuF,EAAW9F,IAAYa,MAAMkF,EAAU,GAAIA,EAAU,IACrD1E,EAAehB,KAAKG,KAAKsF,EAAWjF,GAE1C,MAAO,CAACkF,EAAW1E,EADFhB,KAAKC,MAAMwF,EAAWzE,KAInCG,EAAW,SAACX,EAAOT,EAAKG,GAC5B,IAAMwF,EAAY,CAAC/F,IAAWM,MAAMF,GAAMJ,IAAWQ,KAAKD,IACpDuF,EAAW9F,IAAWa,MAAMkF,EAAU,GAAIA,EAAU,IACpD3E,EAAcf,KAAKG,KAAKsF,EAAWjF,GAEzC,MAAO,CAACkF,EAAW3E,EADFf,KAAKC,MAAMwF,EAAW1E,KAInCK,EAAa,SAACZ,EAAOT,EAAKG,GAC9B,IAAMwF,EAAY,CAAC/F,IAAaM,MAAMF,GAAMJ,IAAaQ,KAAKD,IACxDuF,EAAW9F,IAAaa,MAAMkF,EAAU,GAAIA,EAAU,IACtDC,EAAgB3F,KAAKG,KAAKsF,EAAWjF,GAE3C,MAAO,CAACkF,EAAWC,EADF3F,KAAKC,MAAMwF,EAAWE,KAInCtE,EAAY,SAACb,EAAOT,EAAKG,GAC7B,IAAMwF,EAAY,CAAC/F,IAAYM,MAAMF,GAAMJ,IAAYQ,KAAKD,IACtDuF,EAAW9F,IAAYa,MAAMkF,EAAU,GAAIA,EAAU,IACrD7E,EAAeb,KAAKG,KAAKsF,EAAWjF,GAE1C,MAAO,CAACkF,EAAW7E,EADFb,KAAKC,MAAMwF,EAAW5E,KAMnC+E,EAASjG,IAAoB,CACjCkG,SAAU,wBACVC,KAAM,WACNhH,KAAM,WACNiH,QAAS,CAAC,KAAM,MAChBC,KAAM,CACJ,UACA,SACA,WACA,WACA,aACA,UACA,WAEFC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAChDC,OAAQ,CACN,SACA,UACA,UACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEFC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAKEtH,EAAc,SAACiH,EAAM7D,GACzB,MAAiB,WAAbA,GACa,SAAbA,EAD8B2D,EAAOQ,OAAO,SAAdR,CAAwBE,GAEzC,QAAb7D,EAA2B2D,EAAOQ,OAAO,UAAdR,CAAyBE,GACvC,UAAb7D,EAA6B2D,EAAOQ,OAAO,KAAdR,CAAoBE,GACpC,SAAb7D,EAA4B2D,EAAOQ,OAAO,KAAdR,CAAoBE,QAApD,G,MCtYa,SAASO,EAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQpD,EAAU,EAAVA,OAC9C,OACE,yBAAKsB,UAAU,QACb,wBAAIA,UAAU,YACX6B,EAAQ/G,KAAI,SAACiH,GAAD,OACX,wBACEC,IAAKD,EAAME,KACXjC,UAAW8B,IAAWC,EAAQ,cAAgB,KAC9CG,QAAS,kBAAMxD,EAAOqD,KAEtB,yBAAK/B,UAAU,UAAUmC,IAAKJ,EAAMK,KAAMC,IAAKN,EAAM3C,W,MCVlD,SAASkD,EAAchK,GAAQ,IAAD,EACjBS,oBAAS,GADQ,mBACpCwJ,EADoC,KAC7BC,EAD6B,KAQ3C,OACE,yBAAKxC,UAAU,gBAAgBkC,QANjC,WACEM,GAAS,GACoB,oBAAlBlK,EAAMmK,SAAwBnK,EAAMmK,YAK7C,yBACEzC,UAAW,gBAAkBuC,EAAQ,QAAU,IAC/CG,eAAgB,kBAAMF,GAAS,O,iHCyPxBG,MA1Pf,WAAe,MAGG5J,mBAAS,CACvB,CAAEqG,GAAI,EAAG6C,KAAM,qBAAsBG,KAAMQ,KAC3C,CAAExD,GAAI,EAAG6C,KAAM,aAAcG,KAAMS,KACnC,CAAEzD,GAAI,EAAG6C,KAAM,mBAAoBG,KAAMU,OAHpCC,EAHM,sBASuBhK,mBAASgK,EAAM,IATtC,mBASNC,EATM,KASMC,EATN,OAUWlK,mBAAS,MAVpB,mBAUN8B,EAVM,KAUAqI,EAVA,OAWqBnK,mBAAS,CAAC,IAAIiC,KAAQ,IAAIA,OAX/C,mBAWNmI,EAXM,KAWKC,EAXL,OAYqBrK,mBAAS,CAAC,KAAM,OAZrC,mBAYNsK,EAZM,KAYKC,EAZL,OAaqBvK,mBAAS,CAAEuC,IAAK,IAAKG,IAAK,IAAK8H,IAAK,MAbzD,mBAaNpI,EAbM,KAaKqI,EAbL,OAcqBzK,mBAAS,MAd9B,mBAcNmB,EAdM,KAcKuJ,EAdL,OAe6B1K,oBAAS,GAftC,mBAeN2K,EAfM,KAeSC,EAfT,KA0Bb,SAASC,EAAUT,EAAWE,GAC5B,IAAIQ,EACY,OAAdR,GAAuC,OAAjBA,EAAU,GAAc,QAAUA,EAAU,GAChES,EACY,OAAdT,GAAuC,OAAjBA,EAAU,GAAc,QAAUA,EAAU,GAChEU,EAAU,CACZC,KAAMC,EAAad,EAAU,GAAIU,GACjCK,GAAID,EAAad,EAAU,GAAIW,IAEjC,IACEK,IACGC,IACC,kEACA,CACEL,YAGHM,MAAK,SAACC,GACLpB,EAAQoB,EAASzJ,KAAK0J,eAE1B,MAAOnJ,IACTuI,GAAiB,GAInB,SAASM,EAAa5C,EAAMhH,GAC1B,IAAImK,EAAOnD,EAAKrE,cACZyH,EAAQpD,EAAKpE,WAAa,EAC1B9C,EAAMkH,EAAKnE,UACXwH,GAASrD,EAAKsD,oBAAsB,GACpCC,EAAYF,EAAQ,EAAI,IAAM,IAClC,MAAM,GAAN,OAAUF,EAAV,YAAkBK,EAAQJ,GAA1B,YAAoCI,EAClC1K,GADF,YAEKE,GAFL,OAEYuK,GAFZ,OAEwBC,EAAQH,GAFhC,OAMF,SAASG,EAAQC,GACf,IAAIC,EAAI,KAAOD,EACf,OAAOC,EAAEC,OAAOD,EAAEnJ,OAAS,GAM7B,SAASqJ,EAAgBC,EAAKC,GAC5B1B,GAAa,SAAC2B,GAKZ,OAJIA,GACFA,EAAUtL,QAAQuL,gBAAgB,MAEpCF,EAAG/F,GAAK,YACD,CACLvE,KAAMqK,EACNpL,QAASqL,MAOf,SAASG,EAAgBhK,EAAKG,EAAK8H,GACjCC,EAAa,CAAElI,IAAKA,EAAKG,IAAKA,EAAK8H,IAAKA,IAiC1C,OAtGA5I,qBAAU,WACRiJ,EAAUT,EAAWE,GACrBkC,aAAY,WACV3B,EAAUT,EAAWE,KACpB,OACF,IAkGD,yBAAKrD,UAAU,OACb,kBAAC4B,EAAD,CACEC,QAASkB,EACTjB,OAAQkB,EACRtE,OAAQ,SAAC8G,GAAD,OAhCd,SAA6BA,GAC3BvC,EAAcuC,GACd/B,EAAa,MA8BcgC,CAAoBD,MAE7C,yBAAKpG,GAAG,WACN,yBAAKA,GAAG,WACN,yBAAKA,GAAG,YACN,yBAAKA,GAAG,WACN,yBAAKA,GAAG,UAEV,yBAAKA,GAAG,WACN,yBAAKY,UAAU,iBACb,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,sBAAhB,SACA,yBAAKA,UAAU,cACb,yBACEA,UAAU,iCACVkC,QAxBpB,WACEyB,GAAiB,SAACyB,GAAD,OAAgBA,OAyBf,8BACGjC,EAAU,GAAGuC,qBADhB,KACwC,IACrCvC,EAAU,GAAGuC,sBAEhB,yBAAK1F,UAAU,cAEjB,kBAAC,IAAD,CACE2F,SAhDpB,SAA0BC,GACxBxC,EAAawC,GACbhC,EAAUgC,EAAOvC,IA+CCwC,MAAO1C,EACP2C,YAAY,QACZC,aAAa,EACb/F,UAAY0D,EAA2B,KAAX,aAIlC,yBAAK1D,UAAU,sBACb,0BAAMA,UAAU,sBAAhB,WACA,kBAAC,IAAD,CACE2F,SAnDlB,SAA0BK,GACxB1C,EAAa0C,GACbpC,EAAUT,EAAW6C,IAkDLH,MAAOxC,EACP4C,cAAc,OAKtB,yBAAKjG,UAAU,OACb,kBAACsC,EAAD,CAAeG,QAAS,kBAAMmB,EAAUT,EAAWE,QAGvD,yBAAKrD,UAAU,oBACZgD,GAAcnI,EACV,WAEC,IAAIqL,EAAc,CAChBlE,IAAKgB,EAAWf,KAChBpH,KAAMA,EACNX,UAAW+K,EACX9J,UAAWmK,GAEb,OAAyB,IAAlBtC,EAAW5D,GAChB,kBAAC/G,EAAD,iBACM6N,EADN,CAEEjL,aAAa,KACbhB,KAAK,MACLoB,cAAe,CAAC,EAAG,KACnBf,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,OAE9B,IAAlBsI,EAAW5D,GACb,kBAAC/G,EAAD,iBACM6N,EADN,CAEEjL,aAAa,cACbhB,KAAK,QACLoB,cAAe,CAAC,EAAG,IACnBf,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,OAE9B,IAAlBsI,EAAW5D,GACb,kBAAC/G,EAAD,iBACM6N,EADN,CAEEjL,aAAa,WACbhB,KAAK,IACLoB,cAAe,CAAC,EAAG,KACnBf,OAAQ,CAAEC,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,OAEhD,KAhCL,GAkCD,MAEN,yBAAKsF,UAAU,YACb,yBAAKA,UAAU,yBACb,+BACE,+BACE,4BACE,wBAAIA,UAAU,mBAAd,SACA,wBAAIA,UAAU,6BACX9F,EAAYA,EAAUW,KAAK,GAAGV,IAAM,kBAGzC,4BACE,wBAAI6F,UAAU,mBAAd,WACA,wBAAIA,UAAU,6BACX9F,EACGA,EAAUW,KAAK,GAAGR,KAAO,OACzB,kBAGR,wBAAI2F,UAAU,sBACZ,wBAAImG,QAAQ,KAAKjM,EAAYA,EAAUW,KAAK,GAAK,UAKzD,yBAAKmF,UAAU,oCACb,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,mBAAhB,WACA,0BAAMA,UAAU,kBAAkB7E,EAAUG,KAC5C,0BAAM0E,UAAU,mBAAhB,WACA,0BAAMA,UAAU,kBAAkB7E,EAAUM,KAC5C,0BAAMuE,UAAU,mBAAhB,cACA,0BAAMA,UAAU,kBAAkB7E,EAAUoI,YCxP5D6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3G,SAASC,eAAe,U,mBCV1B2G,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.b5e9782a.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./dataView.css\";\n\nexport default function DataView(props) {\n  let containerRef = useRef(),\n    dotsContainerRef = useRef(),\n    xAxisRef = useRef(),\n    yAxisRef = useRef();\n  const { width, height } = useContainerDimensions(containerRef);\n\n  const [dataArray, setDataArray] = useState([]);\n  const [dataMinMax, setDataMinMax] = useState([0, 0]);\n  const [minDate, setMinDate] = useState(null);\n  const [maxDate, setMaxDate] = useState(null);\n  const [error, setError] = useState(false);\n  const [activeDotDatum, setActiveDotDatum] = useState(null);\n\n  if (!props.margin)\n    props.margin = { left: 40, right: 30, top: 40, bottom: 35 };\n\n  // Reaction to change in data\n  useEffect(() => {\n    // Format the data for later use\n    const datArr = props.data.map((d) => [\n      new Date(d.time),\n      d[props.dataProperty],\n    ]);\n    setDataArray(datArr);\n    setMinDate(d3.min(datArr, (d) => d[0]));\n    setMaxDate(d3.max(datArr, (d) => d[0]));\n\n    // return the min and max to the parent app for display\n    try {\n      props.minMaxAvg(\n        d3.min(props.data, (d) => d[props.dataProperty]).toFixed(1) +\n          \" \" +\n          props.unit,\n        d3.max(props.data, (d) => d[props.dataProperty]).toFixed(1) +\n          \" \" +\n          props.unit,\n        d3.mean(props.data, (d) => d[props.dataProperty]).toFixed(1) +\n          \" \" +\n          props.unit\n      );\n    } catch (e) {\n      props.minMaxAvg(\"-\", \"-\", \"-\");\n    }\n\n    // Set the minimum and maximum of the Y-axis\n    if (props.defaultYRange) {\n      let min =\n        d3.min(props.data, (d) => d[props.dataProperty]) <\n        props.defaultYRange[0]\n          ? Math.floor(d3.min(props.data, (d) => d[props.dataProperty]))\n          : props.defaultYRange[0];\n\n      let max =\n        d3.max(props.data, (d) => d[props.dataProperty]) >\n        props.defaultYRange[1]\n          ? Math.ceil(d3.max(props.data, (d) => d[props.dataProperty]))\n          : props.defaultYRange[1];\n\n      setDataMinMax([min, max]);\n    }\n  }, [props.data, width]);\n\n  // Update of the d3 graphic - called when width or height of the container is changing\n  useEffect(() => {\n    if (\n      minDate !== undefined &&\n      maxDate !== undefined &&\n      props.data.length !== 0\n    ) {\n      updateD3();\n      setError(false);\n    } else {\n      if (props.data.length === 0) setError(true);\n    }\n  }, [width, height, dataArray, error, activeDotDatum]);\n\n  // START OF MAIN RENDERING FUNCTION ==============================================================\n\n  function updateD3() {\n    const w = width - (props.margin.left + props.margin.right);\n    const h = height - (props.margin.top + props.margin.bottom);\n\n    const count = calculateTickCount(w);\n    const [labelText, xAxisMinMax, xScaling] = variableTicks(count);\n\n    const xScale = d3.scaleTime().domain(xAxisMinMax).range([0, w]);\n    const yScale = d3.scaleLinear().domain(dataMinMax).range([h, 0]);\n\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickFormat((d) => multiFormat(d, xScaling))\n      .tickPadding(10)\n      .tickSize(-h)\n      .tickValues(labelText);\n\n    const yAxis = d3.axisLeft(yScale).ticks(5).tickPadding(20);\n\n    d3.select(xAxisRef.current)\n      .attr(\"transform\", `translate(${0}, ${h})`)\n      .call(xAxis);\n\n    const yDOM = d3.select(yAxisRef.current).call(yAxis);\n\n    yDOM.selectAll(\"line\").remove();\n    yDOM.select(\".domain\").remove();\n\n    let lastPoint = { x: 0, y: 0 };\n    let filterData = dataArray.filter((d, i) => {\n      if (i === 0) return true;\n      const diffX = Math.ceil(xScale(d[0])) - lastPoint.x;\n      const diffY = Math.ceil(yScale(d[1])) - lastPoint.y;\n      if (diffX > 10 || diffY > 10) {\n        lastPoint.x = Math.ceil(xScale(d[0]));\n        lastPoint.y = Math.ceil(yScale(d[1]));\n        return true;\n      }\n      return false;\n    });\n\n    d3.select(dotsContainerRef.current)\n      .selectAll(\"circle\")\n      .filter((d, i, nodes) =>\n        nodes[i].hasAttribute(\"id\") ? nodes[i].id !== \"activeDot\" : true\n      )\n      // remove the active dot from the selection\n      .data(filterData)\n      .join(\"circle\")\n      .attr(\"cx\", (d) => xScale(d[0]))\n      .attr(\"cy\", (d) => yScale(d[1]))\n      .attr(\"r\", 5)\n      .classed(\"dot\", true)\n      .on(\"mouseover\", (d) => handleDotInfo(d, d3.event.target))\n      .on(\"click\", (d) => handleDotInfo(d, d3.event.target));\n\n    if (activeDotDatum) {\n      const dotEl = window.document.getElementById(\"activeDot\");\n      d3.select(dotEl)\n        .attr(\"cx\", xScale(activeDotDatum[0]))\n        .attr(\"cy\", yScale(activeDotDatum[1]));\n      if (dotEl && dotEl.parentNode) dotEl.parentNode.appendChild(dotEl);\n    }\n  }\n\n  // END OF MAIN RENDERING FUNCTION ==============================================================\n\n  // Event handler for hovering or clicking on a dot/point in the graphic:\n  // - Saves the datum of the current active point for correct overriding of the position in the rendering\n  // - Returns information about the current active point to the parent app-Component\n  function handleDotInfo(datum, element) {\n    setActiveDotDatum(datum);\n    let valueWithUnit = !datum[1]\n      ? \"Kein Wert\"\n      : datum[1].toFixed(1) + \" \" + props.unit;\n    props.activeDot(\n      [\n        {\n          day: multiFormat(datum[0], \"day\"),\n          time: multiFormat(datum[0], \"minute\"),\n        },\n        valueWithUnit,\n      ],\n      element\n    );\n  }\n\n  // Tries to find final time-axis values and scaling\n  function variableTicks(count) {\n    if (count < 1) return [[], [], \"\"];\n\n    let scaling,\n      yearInterval = 0,\n      monInterval = 0,\n      dayInterval = 0,\n      hourInterval = 0,\n      minInterval;\n\n    let axisMinMax;\n    let newCount;\n\n    scaling = \"minute\";\n    [axisMinMax, minInterval, newCount] = minuteTicks(count, minDate, maxDate);\n\n    if (minInterval > 60) {\n      minInterval = 0;\n      scaling = \"hour\";\n      [axisMinMax, hourInterval, newCount] = hourTicks(count, minDate, maxDate);\n\n      if (d3.timeDay.count(axisMinMax[0], axisMinMax[1]) > 1) {\n        hourInterval = 0;\n        scaling = \"day\";\n        [axisMinMax, dayInterval, newCount] = dayTicks(count, minDate, maxDate);\n\n        if (dayInterval > 16) {\n          dayInterval = 0;\n          scaling = \"month\";\n          [axisMinMax, monInterval, newCount] = monthTicks(\n            count,\n            minDate,\n            maxDate\n          );\n          if (d3.timeYear.count(axisMinMax[0], axisMinMax[1]) > 1) {\n            [axisMinMax, yearInterval, newCount] = yearTicks(\n              count,\n              minDate,\n              maxDate\n            );\n          }\n        }\n      }\n    }\n\n    // Create an array for all the X-axis tick labels\n    const labelText = new Array(newCount + 1);\n    for (let i = 0; i <= newCount; i++) {\n      labelText[i] = new Date(\n        axisMinMax[0].getFullYear() + i * yearInterval,\n        axisMinMax[0].getMonth() + i * monInterval,\n        axisMinMax[0].getDate() + i * dayInterval,\n        axisMinMax[0].getHours() + i * hourInterval,\n        axisMinMax[0].getMinutes() + i * minInterval\n      );\n    }\n    return [labelText, axisMinMax, scaling]; // scaling is later used for the formatting of the labels\n  }\n\n  return (\n    <div className=\"svgContainer\" ref={containerRef}>\n      {error === false ? (\n        <svg height=\"100%\" width=\"100%\">\n          <g transform={`translate(${props.margin.left},${props.margin.top})`}>\n            <text x=\"-30\" y=\"-20\" textAnchor=\"middle\" className=\"yLabel\">\n              {props.unit}\n            </text>\n            <g ref={xAxisRef} className=\"xAxis\" />\n            <g ref={yAxisRef} className=\"yAxis\" />\n            <g ref={dotsContainerRef} />\n          </g>\n        </svg>\n      ) : (\n        <div className=\"dataError\">\n          <p className=\"center\">Für den Zeitraum liegen keine Daten vor</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Custom helper hook for calculating the width and height of the view-container\nconst useContainerDimensions = (myRef) => {\n  const getDimensions = () => ({\n    width: myRef.current.offsetWidth,\n    height: myRef.current.offsetHeight,\n  });\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  useEffect(() => {\n    const handleResize = () => setDimensions(getDimensions());\n    if (myRef.current) setDimensions(getDimensions());\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [myRef]);\n  return dimensions;\n};\n\n// Sets the optimal number of ticks for the given width and needed space per tick-label\nfunction calculateTickCount(width) {\n  return Math.floor(width / 60);\n}\n\n// - Calculate the actual number of ticks for the X-axis\n// based on the optimal number of ticks (count)\n// and the minimum and maximum date (min, max)\n// - Calculate the step size/interval for the minute labels (minInterval)\n// - Calculate the minimum and maximum of the labels (newMin, newMax)\nconst minuteTicks = (count, min, max) => {\n  let counter = 0;\n\n  while ((max.getMinutes() + counter) % 5 !== 0) counter++;\n  const newMax = new Date(\n    max.getFullYear(),\n    max.getMonth(),\n    max.getDate(),\n    max.getHours(),\n    max.getMinutes() + counter\n  );\n  counter = 0;\n  while ((min.getMinutes() - counter) % 5 !== 0) counter++;\n  const newMin = new Date(\n    min.getFullYear(),\n    min.getMonth(),\n    min.getDate(),\n    min.getHours(),\n    min.getMinutes() - counter\n  );\n\n  const timeSpan = d3.timeMinute.count(newMin, newMax);\n  counter = 1;\n  while (counter * 5 * count < timeSpan) counter++;\n  const minInterval = counter * 5;\n  const newCount = Math.floor(timeSpan / minInterval);\n\n  return [[newMin, newMax], minInterval, newCount];\n};\n\nconst hourTicks = (count, min, max) => {\n  const newMinMax = [d3.timeHour.floor(min), d3.timeHour.ceil(max)];\n  const timeSpan = d3.timeHour.count(newMinMax[0], newMinMax[1]);\n  const hourInterval = Math.ceil(timeSpan / count);\n  const newCount = Math.floor(timeSpan / hourInterval);\n  return [newMinMax, hourInterval, newCount];\n};\n\nconst dayTicks = (count, min, max) => {\n  const newMinMax = [d3.timeDay.floor(min), d3.timeDay.ceil(max)];\n  const timeSpan = d3.timeDay.count(newMinMax[0], newMinMax[1]);\n  const dayInterval = Math.ceil(timeSpan / count);\n  const newCount = Math.floor(timeSpan / dayInterval);\n  return [newMinMax, dayInterval, newCount];\n};\n\nconst monthTicks = (count, min, max) => {\n  const newMinMax = [d3.timeMonth.floor(min), d3.timeMonth.ceil(max)];\n  const timeSpan = d3.timeMonth.count(newMinMax[0], newMinMax[1]);\n  const monthInterval = Math.ceil(timeSpan / count);\n  const newCount = Math.floor(timeSpan / monthInterval);\n  return [newMinMax, monthInterval, newCount];\n};\n\nconst yearTicks = (count, min, max) => {\n  const newMinMax = [d3.timeYear.floor(min), d3.timeYear.ceil(max)];\n  const timeSpan = d3.timeYear.count(newMinMax[0], newMinMax[1]);\n  const yearInterval = Math.ceil(timeSpan / count);\n  const newCount = Math.floor(timeSpan / yearInterval);\n  return [newMinMax, yearInterval, newCount];\n};\n\n// Sets the locale time format for german language\n// Used by the multiFormat function\nconst locale = d3.timeFormatLocale({\n  dateTime: \"%A, der %e. %B %Y, %X\",\n  date: \"%d.%m.%Y\",\n  time: \"%H:%M:%S\",\n  periods: [\"am\", \"pm\"],\n  days: [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n  ],\n  shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n  months: [\n    \"Januar\",\n    \"Februar\",\n    \"März\",\n    \"April\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"August\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Dezember\",\n  ],\n  shortMonths: [\n    \"Jan\",\n    \"Feb\",\n    \"Mrz\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dez\",\n  ],\n});\n\n// Format the incoming date object based on the locale and return a string\nconst multiFormat = (date, xScaling) => {\n  if (xScaling === \"minute\") return locale.format(\"%-H:%M\")(date);\n  if (xScaling === \"hour\") return locale.format(\"%-H:%M\")(date);\n  if (xScaling === \"day\") return locale.format(\"%-d. %b\")(date);\n  if (xScaling === \"month\") return locale.format(\"%b\")(date);\n  if (xScaling === \"year\") return locale.format(\"%Y\")(date);\n};\n","import React from \"react\";\nimport \"./menu.css\";\n\nexport default function Menu({ entries, active, select }) {\n  return (\n    <div className=\"menu\">\n      <ul className=\"menuList\">\n        {entries.map((entry) => (\n          <li\n            key={entry.name}\n            className={active === entry ? \"activeEntry\" : null}\n            onClick={() => select(entry)}\n          >\n            <img className=\"modeImg\" src={entry.icon} alt={entry.id} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./refreshButton.css\";\n\nexport default function RefreshButton(props) {\n  const [state, setState] = useState(false);\n\n  function handleClick() {\n    setState(true);\n    if (typeof props.clicked === \"function\") props.clicked();\n  }\n\n  return (\n    <div className=\"refreshButton\" onClick={handleClick}>\n      <div\n        className={\"refresh-icon\" + (state ? \" anim\" : \"\")}\n        onAnimationEnd={() => setState(false)}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport DataView from \"./dataView\";\nimport Menu from \"./menu\";\nimport RefreshButton from \"./refreshButton\";\nimport Calendar from \"react-calendar\";\nimport TimeRangePicker from \"@wojtekmaj/react-timerange-picker\";\nimport axios from \"axios\";\nimport \"./app.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport CO_Icon from \"../icons/CO_Icon.svg\";\nimport Temp_Icon from \"../icons/Temp_Icon.svg\";\nimport Humid_Icon from \"../icons/Humid_Icon.svg\";\n//import UV_Icon from \"../icons/UV_Icon.svg\";\n\nfunction App() {\n  /* states of the app - when a new function call is made,\n     these are the only values that are preserved and not overridden */\n  const [pages] = useState([\n    { id: 0, name: \"Kohlenstoffmonoxid\", icon: CO_Icon },\n    { id: 1, name: \"Temperatur\", icon: Temp_Icon },\n    { id: 2, name: \"Luftfeuchtigkeit\", icon: Humid_Icon },\n    //{ id: 3, name: \"UV-Index\", icon: UV_Icon }, UV is only necesarry if a Sensor is installed\n  ]);\n  const [activePage, setActivePage] = useState(pages[0]);\n  const [data, setData] = useState(null);\n  const [dateRange, setDateRange] = useState([new Date(), new Date()]);\n  const [timeRange, setTimeRange] = useState([null, null]);\n  const [minMaxAvg, setMinMaxAvg] = useState({ min: \"-\", max: \"-\", avg: \"-\" });\n  const [activeDot, setActiveDot] = useState(null);\n  const [expandDateSel, setExpandDateSel] = useState(false);\n\n  /* One time action that is executed when site is first loaded or reloaded */\n  useEffect(() => {\n    fetchData(dateRange, timeRange);\n    setInterval(() => {\n      fetchData(dateRange, timeRange);\n    }, 60000 * 5);\n  }, []);\n\n  /* Request new data via GET-Request */\n  function fetchData(dateRange, timeRange) {\n    let fromTime =\n      timeRange === null || timeRange[0] === null ? \"00:00\" : timeRange[0];\n    let toTime =\n      timeRange === null || timeRange[1] === null ? \"23:59\" : timeRange[1];\n    let headers = {\n      from: dateToString(dateRange[0], fromTime),\n      to: dateToString(dateRange[1], toTime),\n    };\n    try {\n      axios\n        .get(\n          \"http://campus-klima-app.mi.medien.hs-duesseldorf.de/datapoints/\",\n          {\n            headers,\n          }\n        )\n        .then((response) => {\n          setData(response.data.datapoints);\n        });\n    } catch (e) {}\n    setExpandDateSel(false);\n  }\n\n  /* Create the string representation for a date which can be parsed by the backend */\n  function dateToString(date, time) {\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    let shift = -date.getTimezoneOffset() / 60;\n    let shiftSign = shift < 0 ? \"-\" : \"+\";\n    return `${year}-${zeroPad(month)}-${zeroPad(\n      day\n    )}T${time}${shiftSign}${zeroPad(shift)}:00`;\n  }\n\n  /* Convert a number to a string where to a single digit number a leading zero is added */\n  function zeroPad(num) {\n    let s = \"00\" + num;\n    return s.substr(s.length - 2);\n  }\n\n  /* Callback function of DataView-Component:\n     - Set the currently active point in form of attached data : [{day, time}, valueWithUnit]\n     and the element */\n  function handleActiveDot(dat, el) {\n    setActiveDot((prevState) => {\n      if (prevState) {\n        prevState.element.removeAttribute(\"id\");\n      }\n      el.id = \"activeDot\";\n      return {\n        data: dat,\n        element: el,\n      };\n    });\n  }\n\n  /* Callback function of DataView-Component:\n      - Set the calculated minimum and maximum of the data */\n  function handleMinMaxAvg(min, max, avg) {\n    setMinMaxAvg({ min: min, max: max, avg: avg });\n  }\n\n  /* Callback function of Menu-Component:\n     - Set the active page based on the selected page in the menu\n     - Reset the current active dot */\n  function handleMenuSelection(selection) {\n    setActivePage(selection);\n    setActiveDot(null);\n  }\n\n  /* Callback function of Calendar-Component:\n     - Set dateRange to the returned array : [startDate, endDate] based on the selection\n     - Update the data with the new date range */\n  function handleDateSelect(dates) {\n    setDateRange(dates);\n    fetchData(dates, timeRange);\n  }\n\n  /* Callback function of TimeRangePicker-Component:\n     - Set timeRange to the returned array : [startTime, endTime] based on the selection\n     - Update the data with the new time range */\n  function handleTimeSelect(times) {\n    setTimeRange(times);\n    fetchData(dateRange, times);\n  }\n\n  /*  Event handler for clicking on the date selection button:\n      - Toggle the value of expandDateSel and therefore expand or close the Calendar-Component */\n  function handleExpandSelector() {\n    setExpandDateSel((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"app\">\n      <Menu\n        entries={pages}\n        active={activePage}\n        select={(selection) => handleMenuSelection(selection)}\n      />\n      <div id=\"content\">\n        <div id=\"wrapper\">\n          <div id=\"section1\">\n            <div id=\"logoBar\">\n              <div id=\"logo\" />\n            </div>\n            <div id=\"timeBar\">\n              <div className=\"timeBar-items\">\n                <div className=\"timeBar-item-group\">\n                  <span className=\"timeBar-item-label\">Datum</span>\n                  <div className=\"dateSelect\">\n                    <div\n                      className=\"dateSelect-button light-border\"\n                      onClick={handleExpandSelector}\n                    >\n                      <span>\n                        {dateRange[0].toLocaleDateString()} -{\" \"}\n                        {dateRange[1].toLocaleDateString()}\n                      </span>\n                      <div className=\"triangle\" />\n                    </div>\n                    <Calendar\n                      onChange={handleDateSelect}\n                      value={dateRange}\n                      returnValue=\"range\"\n                      selectRange={true}\n                      className={!expandDateSel ? \"hidden\" : null} // Performancesteigerung ist noch fraglich...\n                    />\n                  </div>\n                </div>\n                <div className=\"timeBar-item-group\">\n                  <span className=\"timeBar-item-label\">Uhrzeit</span>\n                  <TimeRangePicker\n                    onChange={handleTimeSelect}\n                    value={timeRange}\n                    disableClock={true}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"bar\">\n              <RefreshButton clicked={() => fetchData(dateRange, timeRange)} />\n            </div>\n          </div>\n          <div className=\"dataView-wrapper\">\n            {activePage && data\n              ? (function () {\n                  // Some properties are the same for all components and can be listed once\n                  let commonProps = {\n                    key: activePage.name,\n                    data: data,\n                    activeDot: handleActiveDot,\n                    minMaxAvg: handleMinMaxAvg,\n                  };\n                  return activePage.id === 0 ? (\n                    <DataView\n                      {...commonProps}\n                      dataProperty=\"co\" // the property name in the raw data\n                      unit=\"ppm\" // Y-axis label\n                      defaultYRange={[0, 300]} // the default range of the Y-Axis\n                      margin={{ left: 60, right: 20, top: 40, bottom: 35 }} // spacing for axis labels\n                    />\n                  ) : activePage.id === 1 ? (\n                    <DataView\n                      {...commonProps}\n                      dataProperty=\"temperature\"\n                      unit=\"°C\"\n                      defaultYRange={[0, 30]}\n                      margin={{ left: 50, right: 20, top: 40, bottom: 35 }}\n                    />\n                  ) : activePage.id === 2 ? (\n                    <DataView\n                      {...commonProps}\n                      dataProperty=\"humidity\"\n                      unit=\"%\"\n                      defaultYRange={[0, 100]}\n                      margin={{ left: 50, right: 20, top: 40, bottom: 35 }}\n                    />\n                  ) : null;\n                })()\n              : null}\n          </div>\n          <div className=\"infoArea\">\n            <div className=\"infoCard light-border\">\n              <table>\n                <tbody>\n                  <tr>\n                    <td className=\"infoCard-header\">Datum</td>\n                    <td className=\"infoCard-value space-l-20\">\n                      {activeDot ? activeDot.data[0].day : \"Keine Auswahl\"}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"infoCard-header\">Uhrzeit</td>\n                    <td className=\"infoCard-value space-l-20\">\n                      {activeDot\n                        ? activeDot.data[0].time + \" Uhr\"\n                        : \"Keine Auswahl\"}\n                    </td>\n                  </tr>\n                  <tr className=\"infoCard-value-big\">\n                    <td colSpan=\"2\">{activeDot ? activeDot.data[1] : \"--\"}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className=\"infoCard infoCard-2 light-border\">\n              <div className=\"infoCard-group\">\n                <span className=\"infoCard-header\">Minimum</span>\n                <span className=\"infoCard-value\">{minMaxAvg.min}</span>\n                <span className=\"infoCard-header\">Maximum</span>\n                <span className=\"infoCard-value\">{minMaxAvg.max}</span>\n                <span className=\"infoCard-header\">Mittelwert</span>\n                <span className=\"infoCard-value\">{minMaxAvg.avg}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\n//import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/CO_Icon.b9917a75.svg\";","module.exports = __webpack_public_path__ + \"static/media/Temp_Icon.8d100e2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Humid_Icon.c53cbaf9.svg\";"],"sourceRoot":""}